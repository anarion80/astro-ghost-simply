---
import siteConfig from "@utils/siteConfig";
import { relativeUrl } from "@utils/relativeUrl";
const menuDropdown = siteConfig.menuDropdown;

export interface Props {
	site?: any;
    navClass?: string;
	isSecondary?: boolean;
    mobile?: boolean;
}

const { site, navClass, isSecondary, mobile } = Astro.props;

---
{ isSecondary ?
    <nav class="menu-secondary">
        <ul item-scope item-type="http://www.schema.org/SiteNavigationElement" role="menu">
            {site.secondary_navigation.map((navItem, i) => (
                <li item-rop="name" role="menuitem" class={ i !== site.secondary_navigation.length - 1 ? `inline-block separator` : `inline-block` } >
                    <a
                        class="godo-tracking hover:text-primary font-medium p-2 inline-block"
                        href={relativeUrl(navItem.url)}
                        partially-active={true}
                        data-event-category="Footer"
                        data-event-action="Menu"
                        data-event-label={navItem.label}
                        data-event-non-interaction="true">{navItem.label}
                    </a>
                </li>
            ))}
        </ul>
    </nav>
    :
    (mobile ?
        (<ul>
            {site.navigation.map((navItem, i) => (
                <li >
                    <a href={relativeUrl(navItem.url)} class="block px-5 py-2 font-medium text-22 leading-tight">{navItem.label}</a>
                </li>
            ))}
            {menuDropdown.map((navItem, i) => (
                <li >
                    <a href={relativeUrl(navItem.url)} class="block px-5 py-2 font-medium text-22 leading-tight">{navItem.label}</a>
                </li>
            ))}
        </ul>)
        :
        (site.navigation.map((navItem, i) => {
            if (navItem.url.match(/^\s?http(s?)/gi)) {
                return <li item-prop="name" class={ i === 0 ? `ml-0` : `ml-5` } >
                    <a
                        class={navClass}
                        href={relativeUrl(navItem.url)}
                        active-class="active text-primary font-semibold"
                        /*partiallyActive={true}*/
                        target="blank"
                        rel="noopener noreferrer"
                        data-event-category="Header"
                        data-event-action="Menu"
                        data-event-label={navItem.label}
                        data-event-non-interaction="true">{navItem.label}
                    </a>
                </li>
            } else {
                return <li item-prop="name" class={ i === 0 ? `ml-0` : `ml-5` } >
                    <a
                        class={navClass}
                        href={relativeUrl(navItem.url)}
                        active-class="active text-primary font-semibold"
                        /*partiallyActive={true}*/
                        data-event-category="Header"
                        data-event-action="Menu"
                        data-event-label={navItem.label}
                        data-event-non-interaction="true">{navItem.label}
                    </a>
                </li>
            }
        }))
    )
}