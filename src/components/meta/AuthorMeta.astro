---
import ImageMeta from './ImageMeta.astro';
import _ from 'lodash'
import { getSettings } from '@lib/api';
import siteConfig from '@utils/siteConfig';
import getAuthorProperties from '@utils/getAuthorProperties';

export interface Props {
    data?: any,
	canonical?: string,
}

const { data, canonical } = Astro.props;
const settings = await getSettings();
const author = getAuthorProperties(data)
const shareImage = author.image || _.get(settings, `cover_image`, null)
const title = `${data.name} - ${settings.title}`
const description = data.bio || siteConfig.siteDescriptionMeta || settings.description

const jsonLd = {
        "@context": `https://schema.org/`,
        "@type": `Person`,
        name: data.name,
        sameAs: author.sameAsArray ? author.sameAsArray : undefined,
        url: canonical,
        image: shareImage ? {
            "@type": `ImageObject`,
            url: shareImage,
            width: siteConfig.shareImageWidth,
            height: siteConfig.shareImageHeight,
        } : undefined,
        mainEntityOfPage: {
            "@type": `WebPage`,
            "@id": siteConfig.siteUrl,
        },
        description,
    }
const schema = JSON.stringify(jsonLd, undefined, 4)

---

    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonical} />
    <meta property="og:site_name" content={settings.title} />
    <meta property="og:type" content="profile" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonical} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:url" content={canonical} />
    {settings.twitter && <meta name="twitter:site" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}
    {settings.twitter && <meta name="twitter:creator" content={settings.twitter} />}
    <script type="application/ld+json" set:html={schema}></script>

<ImageMeta image={shareImage} />