---
import type { InferGetStaticPropsType } from "astro";
import Layout from "@layouts/Layout.astro";
import StoryGrid from "@components/story/StoryGrid.astro";
import Pagination from "@components/Pagination.astro";
import MediaCover from "@components/MediaCover.astro";
import siteConfig from "@utils/siteConfig";
import MetaData from "@components/meta/MetaData.astro";
import { getPosts, getAuthors } from "@lib/api";
import { t } from "@utils/use-lang";

export async function getStaticPaths({ paginate }) {
    const authors = await getAuthors({ include: "count.posts" });
    const posts = await getPosts({
        filter: `visibility:public+tag:-hash-portfolio+tag:-hash-podcast+tag:-hash-custom-kusi-doc`,
    });

    return authors.flatMap(author => {
        const filteredPosts = posts.filter(
            post => post.primary_author.slug === author.slug
        );
        return paginate(filteredPosts, {
            params: { author: author.slug },
            props: { author },
            pageSize: siteConfig.postsPerPage,
        });
    });
}

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, author } = Astro.props;
---

<MetaData location={Astro.url.pathname} type="author" data={author} />
<Layout
    footer={true}
    isPost={false}
    bodyClass="is-author has-cover is-head-transparent"
>
    <div
        class="simply-hero-cover author shadow flex items-center justify-center relative min-h-lg py-24 bg-dark"
    >
        {/*{{!-- Featured Media - partials/components/media-cover.hbs --}} */}
        <MediaCover
            background={author.cover_image}
            hasGradient={true}
            altTitle={author.name}
        />
        <article class="container relative flex flex-col text-center z-3 pt-16">
            {/*{!-- Author avatar --}*/}
            <figure
                class="author-avatar animated bounceInDown relative mx-auto"
            >
                {
                    author.profile_image ? (
                        <imng
                            src={author.profile_image}
                            class="avatar is-100x100 rounded-full object-cover"
                            alt={t(`Hi! I'm`) + " " + author.name}
                        />
                    ) : (
                        <ime
                            src="/images/avatar.png"
                            class="avatar is-100x100 rounded-full object-cover"
                            alt={t(`Hi! I'm`) + " " + author.name}
                        />
                    )
                }
            </figure>

            {/*{!-- Author name --}*/}
            <h1
                class="cover-title animated bounceIn text-4xl lg:text-5xl underscore is-center mt-5 text-white"
            >
                {author.name}
            </h1>

            {/*{!-- author biography --}*/}
            {
                author.bio && (
                    <p class="cover-des mx-auto mb-8 text-xl text-white max-w-3xl">
                        {author.bio}
                    </p>
                )
            }

            {/*{!-- Author (Location - website - RSS) --}*/}
            <div class="author-meta buttons justify-center">
                {
                    author.location && (
                        <span class="author-location button is-transparent">
                            <svg class="icon is-stroke">
                                <use xlink:href="#icon-map" />
                            </svg>
                            <span>{author.location}</span>
                        </span>
                    )
                }

                {
                    author.website && (
                        <a
                            href={author.website}
                            class="author-link button is-transparent"
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <svg class="icon is-stroke">
                                <use xlink:href="#icon-link" />
                            </svg>
                            <span>{author.website}</span>
                        </a>
                    )
                }

                <a
                    href={`https://feedly.com/i/subscription/feed/` +
                        author.url +
                        `rss/`}
                    class="author-stats button is-transparent"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    <svg class="icon"><use xlink:href="#icon-rss"></use></svg>
                    {
                        /* <span>{{plural ../pagination.total empty=(t "No posts") singular=(t "1 post") plural=(t "% posts")}}</span> */
                    }
                </a>
            </div>

            {/*{!-- Author Facebook and Twitter --}*/}
            <div class="author-follow buttons justify-center mt-8">
                {
                    author.facebook && (
                        <a
                            href={author.facebook}
                            title="Facebook"
                            class="button text-white bg-facebook hover:text-white border-0"
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <svg class="icon">
                                <use xlink:href="#icon-facebook" />
                            </svg>
                            <span>Facebook</span>
                        </a>
                    )
                }

                {
                    author.twitter && (
                        <a
                            href={author.twitter}
                            title={author.twitter}
                            class="button text-white bg-twitter hover:text-white border-0"
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <svg class="icon">
                                <use xlink:href="#icon-twitter" />
                            </svg>
                            <span>Twitter</span>
                        </a>
                    )
                }
            </div>
        </article>
    </div>
    <div class="site-post feed-entry-content py-12 px-4">
        <div class="mx-auto max-w-1100 feed-entry-wrap">
            <div class="row">
                {
                    page.data.map(item => {
                        return (
                            <div class="col s12 m6 l4">
                                <StoryGrid post={item} />
                            </div>
                        );
                    })
                }
            </div>
            <Pagination pageContext={page} />
        </div>
    </div>
</Layout>
