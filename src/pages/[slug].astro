---
import Layout from '../layouts/Layout.astro'
import ArticleHeader from '../components/article/ArticleHeader.astro'
import ArticleBody from '../components/article/ArticleBody.astro'
import ArticleFeaturedImage from '../components/article/ArticleFeaturedImage.astro'
import ArticleRelated from '../components/article/ArticleRelated.astro'
import { getPosts } from '../lib/api'
import { map } from 'astro/zod'
import { formatDate } from '../utils/dateConvert'

export interface Props {
	post?: any;
	location?: any,
	page?: any,
}

export async function getStaticPaths(){
	const posts = await getPosts({})
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post, location, page } = Astro.props;

const tags = post.tags.map(item => item.name)
const prevPost = (await getPosts({filter: `published_at:<='${formatDate(post.published_at)}'+slug:-${post.slug}+tag:-hash-portfolio+tag:-hash-podcast+tag:-hash-custom-kusi-doc`, limit: "1", order: "published_at DESC"}))[0]
const nextPost = (await getPosts({filter: `published_at:>'${formatDate(post.published_at)}'+slug:-${post.slug}+tag:-hash-portfolio+tag:-hash-podcast+tag:-hash-custom-kusi-doc`, limit: "1", order: "published_at ASC"}))[0]
const relatedPosts = await getPosts({filter: `slug:-${post.slug}+primary_tag:'${post.primary_tag.slug}'+tag:-hash-portfolio+tag:-hash-podcast+tag:-hash-custom-kusi-doc`, limit: "6", order: "published_at DESC"})

---

<Layout footer={true} bodyClass="is-article" isPost={true}>
	<article class="post mb-10 pt-8 lg:pt-10 relative">
		<ArticleHeader post={post} />
		{ post.feature_image && <ArticleFeaturedImage figureClass="block mx-auto max-w-740 mt-12 px-4" zoomable={true} article={post} /> }
		<ArticleBody post={post} nextPost={nextPost} prevPost={prevPost} />
	</article>
	{(!tags.includes(`#podcast`) && !tags.includes(`#portfolio`)) && <ArticleRelated relatedPosts={relatedPosts} />}
</Layout>